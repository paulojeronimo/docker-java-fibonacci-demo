#!/usr/bin/env bash
set -eou pipefail

artifactId=${artifactId:-docker-java-fibonacci-demo}
version=${version:-0.0.1-SNAPSHOT}

cd "$(dirname "$0")"

declare -A options=(
  [docker_build]="--build-arg JAR_NAME=$artifactId \
    --build-arg JAR_VERSION=$version -t $artifactId .
  build a docker image named '$artifactId'"

  [docker_run]="--rm $artifactId
  run a docker container from image '$artifactId'"

  [docker_rmi]="$artifactId
  remove the generated docker image ($artifactId)"
)

f_arr=( "$@" )
[ $# = 0 ] && option=none || { option="$@"; option=${option// /_}; }

for key in ${!options[@]}
do
  if [ "$option" ] && [[ $option =~ $key ]]
  then
    n=$(IFS=_ read -a arr <<< "$key"; echo ${#arr[@]})
    cmd="${f_arr[@]:0:n} $(sed -n 1p <<< "${options[$key]}") "${f_arr[@]:n}""
    echo $cmd
    $cmd
    exit $?
  fi
done

echo You need to pass some arguments! Examples:
for option in "${!options[@]}"
do
  printf "%-25s" "$0 ${option//_/ }"
  echo '# <- ' $(sed -n 2p <<< "${options[$option]}")
done
